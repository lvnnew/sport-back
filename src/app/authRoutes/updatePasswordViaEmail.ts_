import bcrypt from 'bcrypt';
import Sequelize from 'sequelize';
import {Request, Response} from 'express';
import {log} from '../log';
import {BCRYPT_SALT_ROUNDS} from '../constants';

const Op = Sequelize.Op;

export const updatePasswordViaEmail = async (req: Request, res: Response) => {
  const user = await User.findOne({
    where: {
      resetPasswordToken: req.body.resetPasswordToken,
      resetPasswordExpires: {
        [Op.gt]: Date.now(),
      },
    },
  });
  if (user == null) {
    console.error('password reset link is invalid or has expired');
    res.status(403).send('password reset link is invalid or has expired');
  } else if (user != null) {
    log.info('user exists in db');
    const hashedPassword = await bcrypt.hash(
      req.body.password,
      BCRYPT_SALT_ROUNDS,
    );
    await user.update({
      password: hashedPassword,
      resetPasswordToken: null,
      resetPasswordExpires: null,
    });
    log.info('password updated');
    res.status(200).send({message: 'password updated'});
  } else {
    console.error('no user exists in db to update');
    res.status(401).json('no user exists in db to update');
  }
};
