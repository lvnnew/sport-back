
# DO NOT EDIT! THIS IS GENERATED FILE

{{- if $.Values.bot.enabled }}

{{- range $.Values.bots }}
apiVersion: v1
kind: Service
metadata:
  name: mtbase-{{ .name  }}-bot
  labels:
    app: mtbase-{{ .name  }}-bot
    projectName: {{ $.Values.global.projectName }}
    clusterName: {{ $.Values.global.clusterName }}
    env: {{ $.Values.global.env }}
    deployKind: {{ $.Values.global.deployKind }}
  annotations:
    prometheus.io/scrape: 'true'
spec:
  ports:
  - port: 3000
  selector:
    app: mtbase-{{ .name  }}-bot
---
{{- end }}

{{- range $.Values.bots }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mtbase-{{ .name  }}-bot
spec:
  replicas: {{ default $.Values.bot.replicas .replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
  selector:
    matchLabels:
      app: mtbase-{{ .name  }}-bot
  template:
    metadata:
      labels:
        app: mtbase-{{ .name  }}-bot
        clusterName: {{ $.Values.global.clusterName }}
        env: {{ $.Values.global.env }}
        deployKind: {{ $.Values.global.deployKind }}
    spec:
    {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
      - name: mtbase-{{ .name  }}-bot
        image: {{ $.Values.docker.registry }}/mtbase-back{{ $.Values.app.tag }}
        command: ["node", "{{ .file  }}"]
        ports:
        - name: main-port
          containerPort: 3000
        imagePullPolicy: Always
        env:
        - name: RANDOM
          value: {{ $.Values.random | quote }}
        - name: APP_NAME
          value: mtbase-{{ .name  }}-bot
        - name: ENV
          value: '{{ $.Values.global.env }}'
        - name: APOLLO_KEY
          value: {{ $.Values.apollo.key | quote }}
        - name: DATABASE_URI
          value: {{ $.Values.database.uri | quote }}
        - name: LOGS_FORMAT
          value: {{ $.Values.logs.format | quote }}
        - name: LOKI_URL
          value: {{ $.Values.loki.url | quote }}

        - name: APP_URI
          value: {{ $.Values.app.prefix }}.{{ $.Values.ingress.host }}

        resources:
          requests:
            memory: {{ $.Values.bot.requests.memory }}
            cpu: {{ $.Values.bot.requests.cpu }}
          limits:
            memory: {{ $.Values.bot.limits.memory }}
            cpu: {{ $.Values.bot.limits.cpu }}

        securityContext:
          runAsNonRoot: true
          # readOnlyRootFilesystem: true
          runAsUser: 1000
---
{{- end }}
{{- end }}